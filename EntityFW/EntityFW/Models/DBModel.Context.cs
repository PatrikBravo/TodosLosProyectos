//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EntityFW.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class InstitutoTichEntities : DbContext
    {
        public InstitutoTichEntities()
            : base("name=InstitutoTichEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Alumnos> Alumnos { get; set; }
        public virtual DbSet<AlumnosBaja> AlumnosBaja { get; set; }
        public virtual DbSet<CatCurso> CatCurso { get; set; }
        public virtual DbSet<Cursos> Cursos { get; set; }
        public virtual DbSet<CursosAlumnos> CursosAlumnos { get; set; }
        public virtual DbSet<CursosInstructores> CursosInstructores { get; set; }
        public virtual DbSet<Estados> Estados { get; set; }
        public virtual DbSet<EstatusAlumno> EstatusAlumno { get; set; }
        public virtual DbSet<Instructores> Instructores { get; set; }
        public virtual DbSet<Saldos> Saldos { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<TablaISR> TablaISR { get; set; }
        public virtual DbSet<Transacciones> Transacciones { get; set; }
        public virtual DbSet<Ejercicios> Ejercicios { get; set; }
        public virtual DbSet<Ejercicios1> Ejercicios1 { get; set; }
    
        [DbFunction("InstitutoTichEntities", "amortizaciónReembolso")]
        public virtual IQueryable<amortizaciónReembolso_Result> amortizaciónReembolso(Nullable<int> idAlumno)
        {
            var idAlumnoParameter = idAlumno.HasValue ?
                new ObjectParameter("idAlumno", idAlumno) :
                new ObjectParameter("idAlumno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<amortizaciónReembolso_Result>("[InstitutoTichEntities].[amortizaciónReembolso](@idAlumno)", idAlumnoParameter);
        }
    
        [DbFunction("InstitutoTichEntities", "amortizaciónReembolsoIns")]
        public virtual IQueryable<amortizaciónReembolsoIns_Result> amortizaciónReembolsoIns(Nullable<int> idIns)
        {
            var idInsParameter = idIns.HasValue ?
                new ObjectParameter("idIns", idIns) :
                new ObjectParameter("idIns", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<amortizaciónReembolsoIns_Result>("[InstitutoTichEntities].[amortizaciónReembolsoIns](@idIns)", idInsParameter);
        }
    
        [DbFunction("InstitutoTichEntities", "listaAlumnosPorCurso")]
        public virtual IQueryable<listaAlumnosPorCurso_Result> listaAlumnosPorCurso(Nullable<int> idCurso)
        {
            var idCursoParameter = idCurso.HasValue ?
                new ObjectParameter("idCurso", idCurso) :
                new ObjectParameter("idCurso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<listaAlumnosPorCurso_Result>("[InstitutoTichEntities].[listaAlumnosPorCurso](@idCurso)", idCursoParameter);
        }
    
        public virtual int ASCII_lista()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ASCII_lista");
        }
    
        public virtual ObjectResult<consultarAlumnos_Result> consultarAlumnos(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<consultarAlumnos_Result>("consultarAlumnos", idParameter);
        }
    
        public virtual ObjectResult<consultarEAlumnos_Result> consultarEAlumnos(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<consultarEAlumnos_Result>("consultarEAlumnos", idParameter);
        }
    
        public virtual ObjectResult<consultarEstados_Result> consultarEstados(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<consultarEstados_Result>("consultarEstados", idParameter);
        }
    
        public virtual ObjectResult<consultarEstatusAlumnos_Result> consultarEstatusAlumnos(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<consultarEstatusAlumnos_Result>("consultarEstatusAlumnos", idParameter);
        }
    
        public virtual int SP_Actualizar_Alumnos(Nullable<int> id, string nombre, string primerApellido, string segundoApellido, string correo, string telefono, Nullable<System.DateTime> fechaNacimiento, string curp, Nullable<decimal> sueldo, Nullable<int> idEstadoOrigen, Nullable<short> idEstatus)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var primerApellidoParameter = primerApellido != null ?
                new ObjectParameter("primerApellido", primerApellido) :
                new ObjectParameter("primerApellido", typeof(string));
    
            var segundoApellidoParameter = segundoApellido != null ?
                new ObjectParameter("segundoApellido", segundoApellido) :
                new ObjectParameter("segundoApellido", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("fechaNacimiento", fechaNacimiento) :
                new ObjectParameter("fechaNacimiento", typeof(System.DateTime));
    
            var curpParameter = curp != null ?
                new ObjectParameter("curp", curp) :
                new ObjectParameter("curp", typeof(string));
    
            var sueldoParameter = sueldo.HasValue ?
                new ObjectParameter("sueldo", sueldo) :
                new ObjectParameter("sueldo", typeof(decimal));
    
            var idEstadoOrigenParameter = idEstadoOrigen.HasValue ?
                new ObjectParameter("idEstadoOrigen", idEstadoOrigen) :
                new ObjectParameter("idEstadoOrigen", typeof(int));
    
            var idEstatusParameter = idEstatus.HasValue ?
                new ObjectParameter("idEstatus", idEstatus) :
                new ObjectParameter("idEstatus", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Actualizar_Alumnos", idParameter, nombreParameter, primerApellidoParameter, segundoApellidoParameter, correoParameter, telefonoParameter, fechaNacimientoParameter, curpParameter, sueldoParameter, idEstadoOrigenParameter, idEstatusParameter);
        }
    
        public virtual int SP_Actualizar_Estado(Nullable<int> id, string nombre)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Actualizar_Estado", idParameter, nombreParameter);
        }
    
        public virtual int SP_Actualizar_EstatusAlumno(Nullable<int> id, string clave, string nombre)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Actualizar_EstatusAlumno", idParameter, claveParameter, nombreParameter);
        }
    
        public virtual int SP_actualizarAlumnos(Nullable<int> id, string nombre, string primerApellido, string segundoApellido, string correo, string telefono, Nullable<System.DateTime> fechaNacimiento, string curp, Nullable<decimal> sueldo, Nullable<int> idEstadoOrigen, Nullable<short> idEstatus)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var primerApellidoParameter = primerApellido != null ?
                new ObjectParameter("primerApellido", primerApellido) :
                new ObjectParameter("primerApellido", typeof(string));
    
            var segundoApellidoParameter = segundoApellido != null ?
                new ObjectParameter("segundoApellido", segundoApellido) :
                new ObjectParameter("segundoApellido", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("fechaNacimiento", fechaNacimiento) :
                new ObjectParameter("fechaNacimiento", typeof(System.DateTime));
    
            var curpParameter = curp != null ?
                new ObjectParameter("curp", curp) :
                new ObjectParameter("curp", typeof(string));
    
            var sueldoParameter = sueldo.HasValue ?
                new ObjectParameter("sueldo", sueldo) :
                new ObjectParameter("sueldo", typeof(decimal));
    
            var idEstadoOrigenParameter = idEstadoOrigen.HasValue ?
                new ObjectParameter("idEstadoOrigen", idEstadoOrigen) :
                new ObjectParameter("idEstadoOrigen", typeof(int));
    
            var idEstatusParameter = idEstatus.HasValue ?
                new ObjectParameter("idEstatus", idEstatus) :
                new ObjectParameter("idEstatus", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_actualizarAlumnos", idParameter, nombreParameter, primerApellidoParameter, segundoApellidoParameter, correoParameter, telefonoParameter, fechaNacimientoParameter, curpParameter, sueldoParameter, idEstadoOrigenParameter, idEstatusParameter);
        }
    
        public virtual int SP_actualizarEstatusAlumnos(Nullable<int> idAlumno, Nullable<int> idEstatus)
        {
            var idAlumnoParameter = idAlumno.HasValue ?
                new ObjectParameter("idAlumno", idAlumno) :
                new ObjectParameter("idAlumno", typeof(int));
    
            var idEstatusParameter = idEstatus.HasValue ?
                new ObjectParameter("idEstatus", idEstatus) :
                new ObjectParameter("idEstatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_actualizarEstatusAlumnos", idAlumnoParameter, idEstatusParameter);
        }
    
        public virtual int SP_Agregar_Alumnos(string nombre, string primerApellido, string segundoApellido, string correo, string telefono, Nullable<System.DateTime> fechaNacimiento, string curp, Nullable<decimal> sueldo, Nullable<int> idEstadoOrigen, Nullable<short> idEstatus)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var primerApellidoParameter = primerApellido != null ?
                new ObjectParameter("primerApellido", primerApellido) :
                new ObjectParameter("primerApellido", typeof(string));
    
            var segundoApellidoParameter = segundoApellido != null ?
                new ObjectParameter("segundoApellido", segundoApellido) :
                new ObjectParameter("segundoApellido", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("fechaNacimiento", fechaNacimiento) :
                new ObjectParameter("fechaNacimiento", typeof(System.DateTime));
    
            var curpParameter = curp != null ?
                new ObjectParameter("curp", curp) :
                new ObjectParameter("curp", typeof(string));
    
            var sueldoParameter = sueldo.HasValue ?
                new ObjectParameter("sueldo", sueldo) :
                new ObjectParameter("sueldo", typeof(decimal));
    
            var idEstadoOrigenParameter = idEstadoOrigen.HasValue ?
                new ObjectParameter("idEstadoOrigen", idEstadoOrigen) :
                new ObjectParameter("idEstadoOrigen", typeof(int));
    
            var idEstatusParameter = idEstatus.HasValue ?
                new ObjectParameter("idEstatus", idEstatus) :
                new ObjectParameter("idEstatus", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Agregar_Alumnos", nombreParameter, primerApellidoParameter, segundoApellidoParameter, correoParameter, telefonoParameter, fechaNacimientoParameter, curpParameter, sueldoParameter, idEstadoOrigenParameter, idEstatusParameter);
        }
    
        public virtual int SP_Agregar_Estado(Nullable<int> id, string nombre)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Agregar_Estado", idParameter, nombreParameter);
        }
    
        public virtual int SP_Agregar_EstatusAlumno(Nullable<int> id, string clave, string nombre)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Agregar_EstatusAlumno", idParameter, claveParameter, nombreParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_agregarAlumnos(string nombre, string primerApellido, string segundoApellido, string correo, string telefono, Nullable<System.DateTime> fechaNacimiento, string curp, Nullable<decimal> sueldo, Nullable<int> idEstadoOrigen, Nullable<short> idEstatus)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var primerApellidoParameter = primerApellido != null ?
                new ObjectParameter("primerApellido", primerApellido) :
                new ObjectParameter("primerApellido", typeof(string));
    
            var segundoApellidoParameter = segundoApellido != null ?
                new ObjectParameter("segundoApellido", segundoApellido) :
                new ObjectParameter("segundoApellido", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("fechaNacimiento", fechaNacimiento) :
                new ObjectParameter("fechaNacimiento", typeof(System.DateTime));
    
            var curpParameter = curp != null ?
                new ObjectParameter("curp", curp) :
                new ObjectParameter("curp", typeof(string));
    
            var sueldoParameter = sueldo.HasValue ?
                new ObjectParameter("sueldo", sueldo) :
                new ObjectParameter("sueldo", typeof(decimal));
    
            var idEstadoOrigenParameter = idEstadoOrigen.HasValue ?
                new ObjectParameter("idEstadoOrigen", idEstadoOrigen) :
                new ObjectParameter("idEstadoOrigen", typeof(int));
    
            var idEstatusParameter = idEstatus.HasValue ?
                new ObjectParameter("idEstatus", idEstatus) :
                new ObjectParameter("idEstatus", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_agregarAlumnos", nombreParameter, primerApellidoParameter, segundoApellidoParameter, correoParameter, telefonoParameter, fechaNacimientoParameter, curpParameter, sueldoParameter, idEstadoOrigenParameter, idEstatusParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<SP_ConsultarTodo_Alumnos_Result> SP_ConsultarTodo_Alumnos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ConsultarTodo_Alumnos_Result>("SP_ConsultarTodo_Alumnos");
        }
    
        public virtual ObjectResult<SP_ConsultarTodo_Estado_Result> SP_ConsultarTodo_Estado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ConsultarTodo_Estado_Result>("SP_ConsultarTodo_Estado");
        }
    
        public virtual ObjectResult<SP_ConsultarTodo_EstatusAlumno_Result> SP_ConsultarTodo_EstatusAlumno()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ConsultarTodo_EstatusAlumno_Result>("SP_ConsultarTodo_EstatusAlumno");
        }
    
        public virtual ObjectResult<SP_ConsultarUNO_Alumnos_Result> SP_ConsultarUNO_Alumnos(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ConsultarUNO_Alumnos_Result>("SP_ConsultarUNO_Alumnos", idParameter);
        }
    
        public virtual ObjectResult<SP_ConsultarUNO_Estado_Result> SP_ConsultarUNO_Estado(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ConsultarUNO_Estado_Result>("SP_ConsultarUNO_Estado", idParameter);
        }
    
        public virtual ObjectResult<SP_ConsultarUNO_EstatusAlumno_Result> SP_ConsultarUNO_EstatusAlumno(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ConsultarUNO_EstatusAlumno_Result>("SP_ConsultarUNO_EstatusAlumno", idParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int SP_Eliminar_Alumnos(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Eliminar_Alumnos", idParameter);
        }
    
        public virtual int SP_Eliminar_Estado(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Eliminar_Estado", idParameter);
        }
    
        public virtual int SP_Eliminar_EstatusAlumno(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Eliminar_EstatusAlumno", idParameter);
        }
    
        public virtual int SP_eliminarAlumnos(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_eliminarAlumnos", idParameter);
        }
    
        public virtual int SP_Factorial(ObjectParameter num, ObjectParameter result)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Factorial", num, result);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int SP_Taba_Saldo_Transacciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Taba_Saldo_Transacciones");
        }
    
        public virtual int SP_Transacciones(Nullable<int> idOrigen, Nullable<int> idDestino, Nullable<decimal> monto)
        {
            var idOrigenParameter = idOrigen.HasValue ?
                new ObjectParameter("idOrigen", idOrigen) :
                new ObjectParameter("idOrigen", typeof(int));
    
            var idDestinoParameter = idDestino.HasValue ?
                new ObjectParameter("idDestino", idDestino) :
                new ObjectParameter("idDestino", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("monto", monto) :
                new ObjectParameter("monto", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Transacciones", idOrigenParameter, idDestinoParameter, montoParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
